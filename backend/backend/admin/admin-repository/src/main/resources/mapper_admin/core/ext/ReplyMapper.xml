<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admin.user.repository.base.dao.ReplyMapper">
  <resultMap id="ReplyAndUserMap" type="com.admin.user.entity.domain.ReplyAndUserDO">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="p_id" jdbcType="BIGINT" property="pId" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="fabulous" jdbcType="INTEGER" property="fabulous" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
  </resultMap>
<select id="findReply" parameterType="Long" resultMap="ReplyAndUserMap">
    SELECT
      u_reply.*, `user`.photo,
      `user`.nickname
  FROM
      u_reply
  JOIN u_article ON u_reply.article_id = u_article.id
  AND u_article.id = #{id,jdbcType=BIGINT}
  JOIN `user` ON u_reply.u_id = `user`.id
</select>
</mapper>