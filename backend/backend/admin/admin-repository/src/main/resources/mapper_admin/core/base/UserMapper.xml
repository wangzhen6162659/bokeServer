<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admin.user.repository.base.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name_" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="sex_" jdbcType="CHAR" property="sex" />
    <result column="birthday_" jdbcType="TIMESTAMP" property="birthday" />
    <result column="nation_" jdbcType="VARCHAR" property="nation" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="self_laber" jdbcType="VARCHAR" property="selfLaber" />
    <result column="phone_" jdbcType="VARCHAR" property="phone" />
    <result column="autograph" jdbcType="VARCHAR" property="autograph" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, account, password, name_, nickname, sex_, birthday_, nation_, photo, self_laber, 
    phone_, autograph, last_login, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" parameterType="com.admin.user.repository.base.example.UserExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.admin.user.repository.base.example.UserExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <select id="selectAppIdById" parameterType="map" resultType="java.lang.String">
    <!--
    @mbggenerated
    -->
    select app_id 
    from user
    where 1=1 and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.admin.user.repository.base.example.UserExample">
    <!--
    @mbggenerated
    -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  user where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
  </delete>
  <delete id="deleteByAppIdAndId" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByAppIdAndIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  user where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
  </delete>
  <update id="removeByExample" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByAppIdAndIds" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    set is_delete = 1 
 where 1=1 and id in 
 <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
    #{item}
  </foreach>
  </update>
  <update id="removeByPrimaryKey" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <update id="removeByAppIdAndId" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    insert into user (id, account, password, 
      name_, nickname, sex_, birthday_, 
      nation_, photo, self_laber, 
      phone_, autograph, last_login, 
      create_user, create_time, update_user, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{nation,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{selfLaber,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{autograph,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into user (id, account, password, name_, nickname, sex_, birthday_, nation_, photo, self_laber, phone_, autograph, last_login, create_user, create_time, update_user, update_time ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.account,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.nickname,jdbcType=VARCHAR}, #{item.sex,jdbcType=CHAR}, 
        #{item.birthday,jdbcType=TIMESTAMP}, #{item.nation,jdbcType=VARCHAR}, #{item.photo,jdbcType=VARCHAR}, 
        #{item.selfLaber,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.autograph,jdbcType=VARCHAR}, 
        #{item.lastLogin,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateUser,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name_,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="sex != null">
        sex_,
      </if>
      <if test="birthday != null">
        birthday_,
      </if>
      <if test="nation != null">
        nation_,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="selfLaber != null">
        self_laber,
      </if>
      <if test="phone != null">
        phone_,
      </if>
      <if test="autograph != null">
        autograph,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="selfLaber != null">
        #{selfLaber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="autograph != null">
        #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.admin.user.repository.base.example.UserExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name_ = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex_ = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday_ = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nation != null">
        nation_ = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.selfLaber != null">
        self_laber = #{record.selfLaber,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone_ = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.autograph != null">
        autograph = #{record.autograph,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLogin != null">
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update user
    set id = #{record.id,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name_ = #{record.name,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      sex_ = #{record.sex,jdbcType=CHAR},
      birthday_ = #{record.birthday,jdbcType=TIMESTAMP},
      nation_ = #{record.nation,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      self_laber = #{record.selfLaber,jdbcType=VARCHAR},
      phone_ = #{record.phone,jdbcType=VARCHAR},
      autograph = #{record.autograph,jdbcType=VARCHAR},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name_ = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex_ = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday_ = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nation != null">
        nation_ = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="selfLaber != null">
        self_laber = #{selfLaber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone_ = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="autograph != null">
        autograph = #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndIdSelective" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name_ = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex_ = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday_ = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="nation != null">
        nation_ = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="selfLaber != null">
        self_laber = #{selfLaber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone_ = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="autograph != null">
        autograph = #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name_ = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex_ = #{sex,jdbcType=CHAR},
      birthday_ = #{birthday,jdbcType=TIMESTAMP},
      nation_ = #{nation,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      self_laber = #{selfLaber,jdbcType=VARCHAR},
      phone_ = #{phone,jdbcType=VARCHAR},
      autograph = #{autograph,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndId" parameterType="com.admin.user.entity.po.User">
    <!--
    @mbggenerated
    -->
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name_ = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex_ = #{sex,jdbcType=CHAR},
      birthday_ = #{birthday,jdbcType=TIMESTAMP},
      nation_ = #{nation,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      self_laber = #{selfLaber,jdbcType=VARCHAR},
      phone_ = #{phone,jdbcType=VARCHAR},
      autograph = #{autograph,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>