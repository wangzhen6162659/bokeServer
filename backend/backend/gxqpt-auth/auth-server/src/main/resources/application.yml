#gxqpt:
#  randomstr: jksldfw2lkjr234jkl234nkaer526.;,
#  port:
#    nginx: ${server.port}
#    eureka: 8761
#    gate: ${gxqpt.port.nginx}
#  hostname:
#    redis: 127.0.0.1      # 根据环境更改
#    rabbitmq: 127.0.0.1   # 根据环境更改
#    mysql: 127.0.0.1   # 根据环境更改
#    nginx: 127.0.0.1      # 测试不走nginx 就填写本机
#    eureka: 127.0.0.1     # 根据环境更改
#    gate: ${gxqpt.hostname.nginx}     # eureka 实例界面实现的 statu链接
#    auth: 127.0.0.1
#  mysql:
#    admin:
#      database: gxqpt_core_dev       # 根据环境更改
#      driverClassName: ${gxqpt.mysql.driverClassName}
#      host: ${gxqpt.hostname.mysql}
#      password: ${gxqpt.mysql.password}
#      port: ${gxqpt.mysql.port}
#      url: jdbc:mysql://${gxqpt.mysql.admin.host}:${gxqpt.mysql.admin.port}/${gxqpt.mysql.admin.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true
#      username: ${gxqpt.mysql.username}
#    driverClassName: com.mysql.jdbc.Driver
#    port: 3306                  # 根据环境更改
#    username: root              # 根据环境更改
#    password: LLm65c0VVd3axid9u+Y7DZeKwcODMjU95FRhxom6ApE2yZ1kbi5YzSsdAIz+edUOZH3Engm17+NyfyNczpaYlw==
#  context-path:
#    eureka: /gxqpt-eureka
#    gate: /api
#
#logging:
#  path: ./logs/gxqpt-auth-server
#
#spring:
#  profiles:
#    active: dev
#  application:
#    name: gxqpt-auth-server
#  sleuth:
#    sampler:
#      percentage: 1
#    integration:
#      enabled: false
#    scheduled:
#      skip-pattern: "^org.*HystrixStreamTask$"
#  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: GMT+8
#    default-property-inclusion: non_null
#  redis:
#    database: 1
#    host: ${gxqpt.hostname.redis}
#    port: 6379
#    pool:
#      max-active: 2
#      min-idle: 1
#      max-idle: 2
#      max-wait: 60
#    key-prefix: dev
#    biz-modular: gxqpt-auth-server
#  rabbitmq:
#    host: ${gxqpt.hostname.rabbitmq}
#    port: 5672
#    username: guest
#    password: guest
#
#server:
#  port: 10042
#  context-path:
#
#ribbon:
#  eureka:
#    enabled: true
#  ReadTimeout: 60000
#  ConnectTimeout: 60000
#  MaxAutoRetries: 0
#  MaxAutoRetriesNextServer: 1
#  OkToRetryOnAllOperations: false
#
#hystrix:
#  threadpool:
#    default:
#      coreSize: 1000 # 并发执行的最大线程数，默认10
#      maxQueueSize: 1000 # BlockingQueue的最大队列数
#      queueSizeRejectionThreshold: 500 # 即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000
#
#eureka:
#  instance:
#    status-page-url-path: ${server.context-path}${management.context-path}/info
#    health-check-url-path: ${server.context-path}${management.context-path}/health
#    status-page-url: http://${gxqpt.hostname.gate}:${gxqpt.port.gate}${gxqpt.context-path.gate}/auth${server.context-path}/swagger-ui.html
#    prefer-ip-address: true
#    ip-address: ${gxqpt.hostname.auth}
#    instance-id: ${gxqpt.hostname.auth}:${server.port}${server.context-path}
#    metadata-map:
#      user.name: ${security.user.name}
#      user.password: ${security.user.password}
#      management.context-path: ${management.context-path}
#  client:
#    serviceUrl:
#      defaultZone: http://${gxqpt.hostname.eureka}:${gxqpt.port.eureka}${gxqpt.context-path.eureka}/eureka/
#
#
#management:
#  security:
#    enabled: true
#  context-path: /mgmt
#
#security:
#  basic:
#    enabled: true
#    path: ${server.context-path}${management.context-path}
#  user:
#    name: admin
#    password: gxqptadmin
#endpoints:
#  health:
#    enabled: true
#    sensitive: true  #actuator的health接口是否需要安全保证
#
#jwt:
#  token-header: token # 其三方应用token
#  expire: 7200            # 外部token有效期为2小时
#  pri-key: #   私钥
#    path: app/pri.key
#  pub-key:
#    path: app/pub.key
#
#client:
#  id: gxqpt-auth-server
#  secret: 123456
#  token-header: token
#  admin-header: _isAdmin
#  user-id-header: _user_id
#  user-name-header: _user_name
#  expire: 7200
#  pri-expire: 172800  # 内部token有效期为2天
#  pri-key: # client 私钥
#    path: client/pri.key
#  pub-key:
#    path: client/pub.key

server:
  port: 9998     #指定服务端口
  context-path:
#  undertow:
#      io-threads: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
#      worker-threads: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
#      buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分
#      buffers-per-region: 1024  # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
#      direct-buffers: true  # 是否分配的直接内存
spring:
  application:
    name: auth-server
boke:
  port:
    eureka: 8761
    auth: ${server.port}
    gate: 9999
  hostname:
    eureka: 127.0.0.1
    auth: 127.0.0.1
    gate: 127.0.0.1
  context-path:
    eureka: /boke-eureka
    auth: ${server.context-path}
    gate: /api
  mysql:
    admin:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/boke_main
      username: root
      password:

eureka:
  instance:
    status-page-url: http://${boke.hostname.gate}:${boke.port.gate}${boke.context-path.gate}/auth${server.context-path}/swagger-ui.html
    preferIpAddress: true
    ip-address: ${boke.hostname.auth}
    instance-id: ${boke.hostname.auth}:${server.port}${server.context-path}
  client:
    serviceUrl:
      defaultZone: http://${boke.hostname.eureka}:${boke.port.eureka}${boke.context-path.eureka}/eureka/

id-generator:
  machine-code: 1  # id生成器机器掩码
#
#swagger2:
#  auth-map:
#    title: 认证服务
#    description: 高新区一体化平台项目，认证服务接口
#    base-path: ${boke.context-path.gate}/auth
#    impl-package: com.hengyunsoft.security.auth.controller
#  contact-name: 中科恒运
#  contact-url: http://www.hengyunsoft.com/
#  contact-email: zkhy@hengyunsoft.com
#  host: ${boke.hostname.eureka}:${boke.port.nginx}
#
